// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealCardsApp.Data;

namespace RealCardsApp.Data.Migrations
{
    [DbContext(typeof(RealCardsContext))]
    partial class RealCardsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("RealCardsApp.Data.Entities.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DeckId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DeckId1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DeckId");

                    b.HasIndex("DeckId1");

                    b.ToTable("Card");
                });

            modelBuilder.Entity("RealCardsApp.Data.Entities.CardProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CardId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("CardProperty");
                });

            modelBuilder.Entity("RealCardsApp.Data.Entities.CardType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CardId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("CardType");
                });

            modelBuilder.Entity("RealCardsApp.Data.Entities.Deck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasDiscardPile")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ShuffleDiscardPile")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShuffleOnDeckMerge")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShuffleOnGameStart")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Deck");
                });

            modelBuilder.Entity("RealCardsApp.Data.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("RealCardsApp.Data.Entities.GameInstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ActivePlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("GameEndDateTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("GameStartDateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("TurnCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ActivePlayerId");

                    b.HasIndex("GameId");

                    b.ToTable("GameInstances");
                });

            modelBuilder.Entity("RealCardsApp.Data.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GameInstanceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameInstanceId");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("RealCardsApp.Data.Entities.Card", b =>
                {
                    b.HasOne("RealCardsApp.Data.Entities.Deck", null)
                        .WithMany("Cards")
                        .HasForeignKey("DeckId");

                    b.HasOne("RealCardsApp.Data.Entities.Deck", null)
                        .WithMany("DiscardedCards")
                        .HasForeignKey("DeckId1");
                });

            modelBuilder.Entity("RealCardsApp.Data.Entities.CardProperty", b =>
                {
                    b.HasOne("RealCardsApp.Data.Entities.Card", null)
                        .WithMany("CardProperties")
                        .HasForeignKey("CardId");
                });

            modelBuilder.Entity("RealCardsApp.Data.Entities.CardType", b =>
                {
                    b.HasOne("RealCardsApp.Data.Entities.Card", null)
                        .WithMany("CardTypes")
                        .HasForeignKey("CardId");
                });

            modelBuilder.Entity("RealCardsApp.Data.Entities.Deck", b =>
                {
                    b.HasOne("RealCardsApp.Data.Entities.Game", null)
                        .WithMany("Decks")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("RealCardsApp.Data.Entities.GameInstance", b =>
                {
                    b.HasOne("RealCardsApp.Data.Entities.Player", "ActivePlayer")
                        .WithMany()
                        .HasForeignKey("ActivePlayerId");

                    b.HasOne("RealCardsApp.Data.Entities.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("RealCardsApp.Data.Entities.Player", b =>
                {
                    b.HasOne("RealCardsApp.Data.Entities.GameInstance", null)
                        .WithMany("Players")
                        .HasForeignKey("GameInstanceId");
                });
#pragma warning restore 612, 618
        }
    }
}
